{"ast":null,"code":"var _jsxFileName = \"/home/roshi/Downloads/redux-training-2020-master/ES6 Redux  App Weather/src/containers/weather_list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\nimport GoogleMap from '../components/google_map';\n\nclass WeatherList extends Component {\n  renderWeather(cityData) {\n    console.log(cityData);\n    const name = cityData && cityData.city.name;\n    const temps = cityData && cityData.list.map(weather => weather.main.temp);\n    const pressures = cityData && cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData && cityData.list.map(weather => weather.main.humidity);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: temps,\n      color: \"orange\",\n      units: \"K\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: pressures,\n      color: \"green\",\n      units: \"hPa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: humidities,\n      color: \"black\",\n      units: \"%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Temperature (K)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Pressure (hPa)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Humidity (%)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.props.weather && this.props.weather.map(this.renderWeather)));\n  }\n\n}\n\nfunction mapStateToProps({\n  weather\n}) {\n  return {\n    weather\n  };\n}\n\nexport default connect(mapStateToProps)(WeatherList);","map":{"version":3,"sources":["/home/roshi/Downloads/redux-training-2020-master/ES6 Redux  App Weather/src/containers/weather_list.js"],"names":["React","Component","connect","Chart","GoogleMap","WeatherList","renderWeather","cityData","console","log","name","city","temps","list","map","weather","main","temp","pressures","pressure","humidities","humidity","render","props","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAElCK,EAAAA,aAAa,CAACC,QAAD,EAAW;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,IAAI,GAAGH,QAAQ,IAAIA,QAAQ,CAACI,IAAT,CAAcD,IAAvC;AACA,UAAME,KAAK,GAAGL,QAAQ,IAAIA,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,IAA1C,CAA1B;AACA,UAAMC,SAAS,GAAGX,QAAQ,IAAIA,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaG,QAA1C,CAA9B;AACA,UAAMC,UAAU,GAAGb,QAAQ,IAAIA,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaK,QAA1C,CAA/B;AAEA,wBACE;AAAI,MAAA,GAAG,EAAEX,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,KAAb;AAAoB,MAAA,KAAK,EAAC,QAA1B;AAAmC,MAAA,KAAK,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEM,SAAb;AAAwB,MAAA,KAAK,EAAC,OAA9B;AAAsC,MAAA,KAAK,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,UAAb;AAAyB,MAAA,KAAK,EAAC,OAA/B;AAAuC,MAAA,KAAK,EAAC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAHF,CADF;AAOD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWR,OAAX,IAAsB,KAAKQ,KAAL,CAAWR,OAAX,CAAmBD,GAAnB,CAAuB,KAAKR,aAA5B,CADzB,CATF,CADF;AAeD;;AAlCiC;;AAqCpC,SAASkB,eAAT,CAAyB;AAAET,EAAAA;AAAF,CAAzB,EAAsC;AACpC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAeb,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\nimport GoogleMap from '../components/google_map';\n\nclass WeatherList extends Component {\n\n  renderWeather(cityData) {\n    console.log(cityData);\n    const name = cityData && cityData.city.name;\n    const temps = cityData && cityData.list.map(weather => weather.main.temp);\n    const pressures = cityData && cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData && cityData.list.map(weather => weather.main.humidity);\n\n    return (\n      <tr key={name}>\n        <td><Chart data={temps} color=\"orange\" units=\"K\" /></td>\n        <td><Chart data={pressures} color=\"green\" units=\"hPa\" /></td>\n        <td><Chart data={humidities} color=\"black\" units=\"%\" /></td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>City</th>\n            <th>Temperature (K)</th>\n            <th>Pressure (hPa)</th>\n            <th>Humidity (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.weather && this.props.weather.map(this.renderWeather)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapStateToProps({ weather }) {\n  return { weather };\n}\n\nexport default connect(mapStateToProps)(WeatherList);\n"]},"metadata":{},"sourceType":"module"}