{"ast":null,"code":"var _jsxFileName = \"/home/roshi/Downloads/react-16.x-full-training-2020-master/Day 4.1 Netflix Clone/src/components/titleList.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport Item from './Item';\nimport axios from 'axios';\n\nclass TitleList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.apiKey = '87dfa1c669eea853da609d4968d294be';\n    this.state = {\n      data: [],\n      mounted: false\n    };\n  }\n\n  loadContent() {\n    // TBD replace this with axios \n    axios.get('https://api.themoviedb.org/3/' + this.props.url + '&api_key=' + this.apiKey).then(data => {\n      this.setState({\n        data: data.data\n      });\n    }).catch(err => {\n      console.error(this.props.url, err.toString());\n    });\n  }\n\n  componentDidMount() {\n    this.loadContent();\n    this.setState({\n      mounted: true\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      mounted: false\n    });\n  }\n\n  render() {\n    if (this.state.data.results) {\n      var titles = this.state.data.results.map(function (title, i) {\n        if (i < 5) {\n          var backDrop = 'http://image.tmdb.org/t/p/original' + title.backdrop_path;\n\n          if (!title.name) {\n            var name = title.original_title;\n          } else {\n            var name = title.name;\n          }\n\n          return /*#__PURE__*/React.createElement(Item, {\n            key: title.id,\n            title: name,\n            score: title.vote_average,\n            overview: title.overview,\n            backdrop: backDrop,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 7\n            }\n          });\n        }\n      });\n    } else {\n      var titles = '';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"titlecategory\",\n      className: \"TitleList\",\n      \"data-loaded\": this.state.mounted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titles-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, titles)));\n  }\n\n}\n\nexport default TitleList;","map":{"version":3,"sources":["/home/roshi/Downloads/react-16.x-full-training-2020-master/Day 4.1 Netflix Clone/src/components/titleList.js"],"names":["React","$","Item","axios","TitleList","Component","constructor","props","apiKey","state","data","mounted","loadContent","get","url","then","setState","catch","err","console","error","toString","componentDidMount","componentWillUnmount","render","results","titles","map","title","i","backDrop","backdrop_path","name","original_title","id","vote_average","overview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAe,kCAAf;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AACFC,MAAAA,OAAO,EAAE;AADP,KAAb;AAGA;;AAEFC,EAAAA,WAAW,GAAG;AACb;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,kCAAkC,KAAKN,KAAL,CAAWO,GAA7C,GAAmD,WAAnD,GAAiE,KAAKN,MAAhF,EACCO,IADD,CACOL,IAAD,IAAU;AACb,WAAKM,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEA,IAAI,CAACA;AAAZ,OAAd;AACF,KAHD,EAGGO,KAHH,CAGSC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAc,KAAKb,KAAL,CAAWO,GAAzB,EAA8BI,GAAG,CAACG,QAAJ,EAA9B;AACF,KALD;AAMA;;AACDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKV,WAAL;AACA,SAAKI,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA;;AACDY,EAAAA,oBAAoB,GAAG;AACtB,SAAKP,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA;;AACDa,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,OAAnB,EAA4B;AAC3B,UAAIC,MAAM,GAAG,KAAKjB,KAAL,CAAWC,IAAX,CAAgBe,OAAhB,CAAwBE,GAAxB,CAA4B,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;AAC3D,YAAGA,CAAC,GAAG,CAAP,EAAU;AAET,cAAIC,QAAQ,GAAG,uCAAuCF,KAAK,CAACG,aAA5D;;AACA,cAAG,CAACH,KAAK,CAACI,IAAV,EAAgB;AACf,gBAAIA,IAAI,GAAGJ,KAAK,CAACK,cAAjB;AACA,WAFD,MAEO;AACN,gBAAID,IAAI,GAAGJ,KAAK,CAACI,IAAjB;AACA;;AACD,8BACC,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEJ,KAAK,CAACM,EAAjB;AAAqB,YAAA,KAAK,EAAEF,IAA5B;AAAkC,YAAA,KAAK,EAAEJ,KAAK,CAACO,YAA/C;AAA6D,YAAA,QAAQ,EAAEP,KAAK,CAACQ,QAA7E;AAAuF,YAAA,QAAQ,EAAEN,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAIA;AACD,OAdY,CAAb;AAgBA,KAjBD,MAiBO;AACN,UAAIJ,MAAM,GAAG,EAAb;AACA;;AACD,wBACC;AAAK,MAAA,GAAG,EAAC,eAAT;AAAyB,MAAA,SAAS,EAAC,WAAnC;AAA+C,qBAAa,KAAKjB,KAAL,CAAWE,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWqB,KAAhB,CADD,eAEC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,MADF,CAFD,CADD,CADD;AAUA;;AAxDsC;;AA2DxC,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport $ from 'jquery'; \nimport Item from './Item';\nimport axios from 'axios';\nclass TitleList extends React.Component {\n\t constructor(props){\n\t\t\tsuper(props);\n\t\t\tthis.apiKey =  '87dfa1c669eea853da609d4968d294be';\n\t\t\tthis.state = {\n\t\t\t\tdata: [], mounted: false\n\t\t\t}\n\t }\n\n\tloadContent() {\n\t\t// TBD replace this with axios \n\t\taxios.get('https://api.themoviedb.org/3/' + this.props.url + '&api_key=' + this.apiKey)\n\t\t.then((data) => {\n\t\t\t\t\tthis.setState({data: data.data});\n\t\t}).catch(err => {\n\t\t\t\t\tconsole.error(this.props.url, err.toString());\n\t\t})\n\t}\n\tcomponentDidMount() {\n\t\tthis.loadContent();\n\t\tthis.setState({ mounted: true });\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.setState({ mounted: false });\n\t}\n\trender() {\n\t\tif(this.state.data.results) {\n\t\t\tvar titles = this.state.data.results.map(function(title, i) {\n\t\t\t\tif(i < 5) {\n\n\t\t\t\t\tvar backDrop = 'http://image.tmdb.org/t/p/original' + title.backdrop_path;\n\t\t\t\t\tif(!title.name) {\n\t\t\t\t\t\tvar name = title.original_title;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar name = title.name;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item key={title.id} title={name} score={title.vote_average} overview={title.overview} backdrop={backDrop} />\n\t\t\t\t\t);\t\n\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t} else {\n\t\t\tvar titles = '';\n\t\t}\n\t\treturn (\n\t\t\t<div ref=\"titlecategory\" className=\"TitleList\" data-loaded={this.state.mounted}>\n\t\t\t\t<div className=\"Title\">\n\t\t\t\t\t<h1>{this.props.title}</h1>\n\t\t\t\t\t<div className=\"titles-wrapper\">\n\t\t\t\t\t\t{titles}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n }\n}\n\nexport default TitleList;"]},"metadata":{},"sourceType":"module"}